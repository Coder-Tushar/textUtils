{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","TextForm","useState","text","setText","heading","onClick","NewText","toUpperCase","toLowerCase","textarea","document","createElement","enteredText","value","body","appendChild","select","execCommand","remove","alert","onChange","e","target","rows","length","split","filter","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gKAoCeA,MAlCf,SAAgBC,GACd,OACE,8BACE,qBAAKC,UAAU,8CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBACEF,UAAU,iBACVG,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMR,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BS,GAAG,yBAA7C,SACE,oBAAIT,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkBU,eAAa,OAAOT,KAAK,IAAxD,gC,OC6EDU,EAnGE,SAACZ,GAChB,IAD0B,EAkCFa,mBAAS,sBAlCP,mBAkCnBC,EAlCmB,KAkCbC,EAlCa,KAmC1B,OACE,sBAAKd,UAAU,iBAAiBS,GAAG,WAAnC,UACE,oBAAIT,UAAU,OAAd,SAAsBD,EAAMgB,UAC5B,sBAAKf,UAAU,OAAf,UACE,wBACEG,KAAK,SACLH,UAAU,uBACVgB,QArCc,WACpB,IAAMC,EAAUJ,EAAKK,cACrBJ,EAAQG,IAgCJ,kCAOA,wBACEd,KAAK,SACLH,UAAU,4BACVgB,QAvCc,WACpB,IAAMC,EAAUJ,EAAKM,cACrBL,EAAQG,IAkCJ,kCAOA,wBACEd,KAAK,SACLH,UAAU,4BACVgB,QAtCS,WACf,IAAMI,EAAWC,SAASC,cAAc,YAClCC,EAAcV,EAEfU,IAILH,EAASI,MAAQD,EACjBF,SAASI,KAAKC,YAAYN,GAC1BA,EAASO,SACTN,SAASO,YAAY,QACrBR,EAASS,SACTC,MAAM,8BAsBF,SAKE,mBAAG9B,UAAU,uBAEf,wBACEG,KAAK,SACLH,UAAU,2BACVgB,QAjDU,WAEhBF,EADgB,KA6CZ,SAKE,mBAAGd,UAAU,mBAEf,0BACEwB,MAAOX,EACPb,UAAU,eACVS,GAAG,8BACHsB,SAtEe,SAACC,GACtBlB,EAAQkB,EAAEC,OAAOT,QAsEXU,KAAK,UAGT,sBAAKlC,UAAU,YAAf,UACE,8CACA,+BACGa,EAAKsB,OADR,eAC4B,IAExBtB,EAAKuB,MAAM,KAAKC,QAAO,SAACC,GACtB,OAA0B,IAAnBA,EAAQH,UACdA,UAGP,8BACG,KACCtB,EAAKuB,MAAM,KAAKC,QAAO,SAACC,GACtB,OAA0B,IAAnBA,EAAQH,UACdA,OAAQ,IAJf,kBAOA,yCACA,4BAAItB,WCjFG0B,EAVH,WACV,OACE,qCACE,cAAC,EAAD,CAAQrC,MAAM,cAEd,cAAC,EAAD,CAAUa,QAAQ,8BCGTyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAAS+B,eAAe,SAM1BZ,K","file":"static/js/main.a894540f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n        <div className='container-fluid'>\r\n          <a className='navbar-brand' href='/'>\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-bs-toggle='collapse'\r\n            data-bs-target='#navbarSupportedContent'\r\n            aria-controls='navbarSupportedContent'\r\n            aria-expanded='false'\r\n            aria-label='Toggle navigation'\r\n          >\r\n            <span className='navbar-toggler-icon'></span>\r\n          </button>\r\n          <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n              <li className='nav-item'>\r\n                <a className='nav-link active' aria-current='page' href='/'>\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState } from 'react';\r\n\r\nconst TextForm = (props) => {\r\n  const handleOnChange = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleUpClick = () => {\r\n    const NewText = text.toUpperCase();\r\n    setText(NewText);\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    const NewText = text.toLowerCase();\r\n    setText(NewText);\r\n  };\r\n  const clearText = () => {\r\n    const NewText = '';\r\n    setText(NewText);\r\n  };\r\n  const copyText = () => {\r\n    const textarea = document.createElement('textarea');\r\n    const enteredText = text;\r\n\r\n    if (!enteredText) {\r\n      return;\r\n    }\r\n\r\n    textarea.value = enteredText;\r\n    document.body.appendChild(textarea);\r\n    textarea.select();\r\n    document.execCommand('copy');\r\n    textarea.remove();\r\n    alert('Text copied to clipboard');\r\n  };\r\n\r\n  const [text, setText] = useState('Enter The Text....');\r\n  return (\r\n    <div className='container my-5' id='textArea'>\r\n      <h1 className='mb-3'>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n        <button\r\n          type='button'\r\n          className='btn btn-primary my-3'\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to UpperCase\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn-success my-3 mx-2'\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert to LowerCase\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn-warning my-3 mx-2'\r\n          onClick={copyText}\r\n        >\r\n          <i className='fas fa-clipboard'></i>\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn-danger my-3 mx-2'\r\n          onClick={clearText}\r\n        >\r\n          <i className='fas fa-trash'></i>\r\n        </button>\r\n        <textarea\r\n          value={text}\r\n          className='form-control'\r\n          id='exampleFormControlTextarea1'\r\n          onChange={handleOnChange}\r\n          rows='12'\r\n        ></textarea>\r\n      </div>\r\n      <div className='container'>\r\n        <h2>Text Summary</h2>\r\n        <h6>\r\n          {text.length} letters and{' '}\r\n          {\r\n            text.split(' ').filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }\r\n        </h6>\r\n        <p>\r\n          {0.008 *\r\n            text.split(' ').filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{' '}\r\n          Minutes read\r\n        </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextForm;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nconst App = () => {\n  return (\n    <>\n      <Navbar title='TextUtils' />\n\n      <TextForm heading='Enter Your Text Below' />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}